{"ast":null,"code":"var _jsxFileName = \"/Users/timothylee/FormulaSAE/formulaUI_20/formulaui_20/src/components/Speedometer.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nvar num = 0;\nvar percentage;\nvar topSpeed = 0;\nvar averageSpeed = 0;\n\nclass Speedometer extends React.Component {\n  tick() {\n    num = Math.floor(Math.random() * 100);\n    percentage = num / 2;\n\n    if (topSpeed < num) {\n      topSpeed = num;\n    }\n\n    averageSpeed = (num + averageSpeed) / 2;\n    this.setState(prevState => ({}));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction RadialSeparator(props) {\n  return React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      height: \"100%\",\n      transform: \"rotate(\".concat(props.turns, \"turn)\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: props.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n\nfunction RadialSeparators(props) {\n  return props.values.map(value => React.createElement(RadialSeparator, {\n    turns: value,\n    style: props.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nfunction App() {\n  percentage = num / 2;\n  const strokeWidth = 7;\n  const rotation = 0.75;\n  const circleRatio = 0.5;\n  const numSeparators = 10;\n  return React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"25%\",\n      paddingTop: \"25%\",\n      width: \"50%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CircularProgressbarWithChildren, {\n    value: percentage,\n    strokeWidth: strokeWidth,\n    circleRatio: circleRatio,\n    styles: buildStyles({\n      strokeLinecap: \"butt\",\n      rotation: rotation\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(RadialSeparators, {\n    values: _.range(numSeparators + 1).map(index => circleRatio / numSeparators * index + rotation),\n    style: {\n      background: \"#888\",\n      width: \"2px\",\n      height: \"5%\",\n      marginTop: -10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Speed: \", num), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Top Speed: \", topSpeed), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Average Speed: \", averageSpeed.toFixed())))));\n}\n\nexport default Speedometer;","map":{"version":3,"sources":["/Users/timothylee/FormulaSAE/formulaUI_20/formulaui_20/src/components/Speedometer.js"],"names":["React","_","CircularProgressbarWithChildren","buildStyles","num","percentage","topSpeed","averageSpeed","Speedometer","Component","tick","Math","floor","random","setState","prevState","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","RadialSeparator","props","position","height","transform","turns","style","RadialSeparators","values","map","value","App","strokeWidth","rotation","circleRatio","numSeparators","paddingLeft","paddingTop","width","strokeLinecap","display","alignItems","justifyContent","range","index","background","marginTop","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SACEC,+BADF,EAEEC,WAFF,QAGO,4BAHP;AAIA,OAAO,4CAAP;AAEA,IAAIC,GAAG,GAAG,CAAV;AACA,IAAIC,UAAJ;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,YAAY,GAAG,CAAnB;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AACxCC,EAAAA,IAAI,GAAG;AACLN,IAAAA,GAAG,GAAGO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAN;AACAR,IAAAA,UAAU,GAAGD,GAAG,GAAG,CAAnB;;AACA,QAAIE,QAAQ,GAAGF,GAAf,EAAoB;AAClBE,MAAAA,QAAQ,GAAGF,GAAX;AACD;;AACDG,IAAAA,YAAY,GAAG,CAACH,GAAG,GAAGG,YAAP,IAAuB,CAAtC;AACA,SAAKO,QAAL,CAAcC,SAAS,KAAK,EAAL,CAAvB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKR,IAAL,EAAP,EAAoB,IAApB,CAA3B;AACD;;AAEDS,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AArBuC;;AAwB1C,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,SAAS,mBAAYH,KAAK,CAACI,KAAlB;AAHJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,KAAK,EAAEJ,KAAK,CAACK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;;AAED,SAASC,gBAAT,CAA0BN,KAA1B,EAAiC;AAC/B,SAAOA,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAC3B,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEA,KAAxB;AAA+B,IAAA,KAAK,EAAET,KAAK,CAACK,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAGD;;AAED,SAASK,GAAT,GAAe;AACb5B,EAAAA,UAAU,GAAGD,GAAG,GAAG,CAAnB;AACA,QAAM8B,WAAW,GAAG,CAApB;AACA,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAMC,WAAW,GAAG,GAApB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACA,SACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE,KADR;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,KAAK,EAAE;AAHF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,+BAAD;AACE,IAAA,KAAK,EAAEnC,UADT;AAEE,IAAA,WAAW,EAAE6B,WAFf;AAGE,IAAA,WAAW,EAAEE,WAHf;AAIE,IAAA,MAAM,EAAEjC,WAAW,CAAC;AAClBsC,MAAAA,aAAa,EAAE,MADG;AAElBN,MAAAA,QAAQ,EAAEA;AAFQ,KAAD,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,gBAAD;AACE,IAAA,MAAM,EAAE3C,CAAC,CAAC4C,KAAF,CAAQR,aAAa,GAAG,CAAxB,EAA2BN,GAA3B,CACNe,KAAK,IAAKV,WAAW,GAAGC,aAAf,GAAgCS,KAAhC,GAAwCX,QAD3C,CADV;AAIE,IAAA,KAAK,EAAE;AACLY,MAAAA,UAAU,EAAE,MADP;AAELP,MAAAA,KAAK,EAAE,KAFF;AAGLf,MAAAA,MAAM,EAAE,IAHH;AAILuB,MAAAA,SAAS,EAAE,CAAC;AAJP,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAa5C,GAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBE,QAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqBC,YAAY,CAAC0C,OAAb,EAArB,CAHF,CAlBF,CATF,CAPF,CADF;AA4CD;;AAED,eAAezC,WAAf","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  CircularProgressbarWithChildren,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nvar num = 0;\nvar percentage;\nvar topSpeed = 0;\nvar averageSpeed = 0;\n\nclass Speedometer extends React.Component {\n  tick() {\n    num = Math.floor(Math.random() * 100);\n    percentage = num / 2;\n    if (topSpeed < num) {\n      topSpeed = num;\n    }\n    averageSpeed = (num + averageSpeed) / 2;\n    this.setState(prevState => ({}));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return <App />;\n  }\n}\n\nfunction RadialSeparator(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        transform: `rotate(${props.turns}turn)`\n      }}\n    >\n      <div style={props.style} />\n    </div>\n  );\n}\n\nfunction RadialSeparators(props) {\n  return props.values.map(value => (\n    <RadialSeparator turns={value} style={props.style} />\n  ));\n}\n\nfunction App() {\n  percentage = num / 2;\n  const strokeWidth = 7;\n  const rotation = 0.75;\n  const circleRatio = 0.5;\n  const numSeparators = 10;\n  return (\n    <div\n      style={{\n        paddingLeft: \"25%\",\n        paddingTop: \"25%\",\n        width: \"50%\"\n      }}\n    >\n      <CircularProgressbarWithChildren\n        value={percentage}\n        strokeWidth={strokeWidth}\n        circleRatio={circleRatio}\n        styles={buildStyles({\n          strokeLinecap: \"butt\",\n          rotation: rotation\n        })}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <RadialSeparators\n            values={_.range(numSeparators + 1).map(\n              index => (circleRatio / numSeparators) * index + rotation\n            )}\n            style={{\n              background: \"#888\",\n              width: \"2px\",\n              height: \"5%\",\n              marginTop: -10\n            }}\n          />\n          <span>\n            <div>Speed: {num}</div>\n            <div>Top Speed: {topSpeed}</div>\n            <div>Average Speed: {averageSpeed.toFixed()}</div>\n          </span>\n        </div>\n      </CircularProgressbarWithChildren>\n    </div>\n  );\n}\n\nexport default Speedometer;\n"]},"metadata":{},"sourceType":"module"}