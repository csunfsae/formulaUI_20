{"ast":null,"code":"var _jsxFileName = \"/Users/timothylee/FormulaSAE/formulaUI_20/formulaui_20/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { Card, CardDeck, CardGroup, CardColumns, Container, Row, Col } from 'react-bootstrap';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { usePosition } from 'use-position';\nimport io from 'socket.io-client';\nimport './Cards.css';\nconst key = \"9b6e02c485d9161a33a3956639611759\";\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      city: null,\n      lat: 34.2418,\n      long: -118.5289,\n      temperature: undefined,\n      description: undefined,\n      location: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(this.state.lat, \"&lon=\").concat(this.state.long, \"&APPID=\").concat(key)).then(res => {\n      console.log(res);\n      const data = res.data;\n      this.setState({\n        data: data,\n        temperature: data.main.temp,\n        description: data.weather[0].description\n      });\n    });\n  }\n\n  convertToFarenheit(kelvin) {\n    const roundedFaren = Math.round(kelvin * 9 / 5 - 459.67);\n    return roundedFaren;\n  }\n\n  // getPosition = (options) => {\n  //     return new Promise(function (resolve, reject) {\n  //       navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  //     });\n  // }\n  render() {\n    // console.log(`${this.state.lat}`)\n    // console.log(`${this.state.long}`)\n    // console.log(`${this.state.temperature}`)\n    // console.log(`${this.state.location}`)\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"row justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"weather-card\",\n      border: \"dark\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Today's Forecast\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.convertToFarenheit(this.state.temperature), \"\\xB0F\"), React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.description, \" \")))), React.createElement(Col, {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"battery-temperature\",\n      border: \"dark\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Battery Temperature\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Current Temperature:\", React.createElement(\"p\", {\n      className: \"current-temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" 30\\xB0C \"), React.createElement(\"p\", {\n      className: \"average-temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" Average Temperature: 10\\xB0C \")))))), React.createElement(Row, {\n      className: \"row justify-content-between bottom-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"col-6 bottom-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"speed\",\n      border: \"dark\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Speed Statistics\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" Top Speed:     50 mph\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Average Speed: 25 mph\"))))), React.createElement(Col, {\n      className: \"col-6 bottom-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"drive-statistics\",\n      border: \"dark\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Drive Statistics\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      className: \"drive-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"2 Drives\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" 50.96km Driven\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" 90% Efficiency\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" 2hr 30min Drive Time\"))))))));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/timothylee/FormulaSAE/formulaUI_20/formulaui_20/src/components/Cards.js"],"names":["React","Component","Card","CardDeck","CardGroup","CardColumns","Container","Row","Col","axios","moment","usePosition","io","key","Cards","constructor","props","state","data","city","lat","long","temperature","undefined","description","location","componentDidMount","get","then","res","console","log","setState","main","temp","weather","convertToFarenheit","kelvin","roundedFaren","Math","round","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardDeck, CardGroup, CardColumns, Container, Row, Col } from 'react-bootstrap';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport { usePosition } from 'use-position';\n\nimport io from 'socket.io-client';\n\nimport './Cards.css';\n\nconst key = \"9b6e02c485d9161a33a3956639611759\";\n\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            city: null,\n            lat: 34.2418,\n            long: -118.5289,\n            temperature: undefined,\n            description: undefined, \n            location: null\n        }\n    }\n\n    componentDidMount() { \n        axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.long}&APPID=${key}`)\n            .then (res => {\n                console.log(res);\n                const data = res.data;\n                this.setState({\n                    data: data,\n                    temperature: data.main.temp,\n                    description: data.weather[0].description\n                });\n            })\n    };\n\n    convertToFarenheit(kelvin) {\n        const roundedFaren = Math.round(kelvin * 9/5 - 459.67);\n        return roundedFaren;\n    };\n    // getPosition = (options) => {\n    //     return new Promise(function (resolve, reject) {\n    //       navigator.geolocation.getCurrentPosition(resolve, reject, options);\n    //     });\n    // }\n    render() { \n        // console.log(`${this.state.lat}`)\n        // console.log(`${this.state.long}`)\n        // console.log(`${this.state.temperature}`)\n        // console.log(`${this.state.location}`)\n        return (\n            <React.Fragment>\n            {/* // <div className=\"card-container\">  */}\n                <Container>\n                <Row className=\"row justify-content-between\">\n                    <Col className=\"col-6\">\n                        <Card className=\"weather-card\" border=\"dark\" style={{ width: '15rem' }}>\n                            <Card.Header>Today's Forecast</Card.Header>\n                            <Card.Body>\n                                    <p className=\"weather\"> \n                                        {this.convertToFarenheit(this.state.temperature)}°F  \n                                    </p>\n                                    <p className=\"text-center\">{this.state.description} </p> \n                            </Card.Body>\n                        </Card>  \n                    </Col>\n                    <Col className=\"col-6\">\n                        <Card className=\"battery-temperature\" border=\"dark\" style={{ width: '15rem' }}>\n                            <Card.Header>Battery Temperature</Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    Current Temperature:<p className=\"current-temperature\"> 30°C </p>\n                                    <p className=\"average-temperature\"> Average Temperature: 10°C </p>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card> \n                    </Col> \n                </Row> \n                <Row className=\"row justify-content-between bottom-row\">\n                    <Col className=\"col-6 bottom-col\">\n                        <Card className=\"speed\" border=\"dark\" style={{ width: '15rem' }}>\n                            <Card.Header>Speed Statistics</Card.Header>\n                            <Card.Body>\n                                <Card.Title> </Card.Title>\n                                <Card.Text>\n                                    <p> Top Speed:     50 mph</p>\n                                    <p> Average Speed: 25 mph</p>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>  \n                    </Col>\n                    <Col className=\"col-6 bottom-col\">\n                        <Card className=\"drive-statistics\" border=\"dark\" style={{ width: '15rem' }}>\n                            <Card.Header>Drive Statistics</Card.Header>\n                            <Card.Body>\n                                <Card.Title className=\"drive-title\">2 Drives</Card.Title>\n                                <Card.Text>\n                                    <p> 50.96km Driven</p>\n                                    <p> 90% Efficiency</p>\n                                    <p> 2hr 30min Drive Time</p>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card> \n                    </Col> \n                </Row>       \n                </Container>    \n            {/* </div> */}\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Cards; \n\n\n"]},"metadata":{},"sourceType":"module"}