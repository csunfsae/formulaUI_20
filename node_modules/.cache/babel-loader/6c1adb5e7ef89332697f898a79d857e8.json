{"ast":null,"code":"var _jsxFileName = \"/Users/timothylee/FormulaSAE/formulaUI_20/formulaui_20/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Card, CardDeck, CardGroup, CardColumns, Container, Row, Col } from 'react-bootstrap';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport io from 'socket.io-client';\nimport { usePosition } from 'use-position';\nimport './Cards.css';\nconst key = \"9b6e02c485d9161a33a3956639611759\";\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: undefined,\n      city: \"Burbank\",\n      lat: undefined,\n      long: undefined,\n      temperature: undefined,\n      location: null\n    };\n  }\n\n  componentDidMount() {// if (navigator.geolocation) {\n    //     this.getPosition()\n    //     .then((position) => {      \n    //       this.getWeather(position.coords.latitude, position.coords.longitude)\n    //     })\n    //     .catch((err) => {\n    //       this.setState({ errorMessage: err.message });\n    //     });\n    //   }\n    //   else {\n    //     alert(\"Geolocation not available\")\n    // }\n    // axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=${key}`)\n    //     .then (res => {\n    //         console.log(res);\n    //         const data = res.data;\n    //         this.setState({\n    //             lat: data.lat,\n    //             long: data.long,\n    //             city: data.city,\n    //             temperature: data.main[3]\n    //         });\n    //     })\n  }\n\n  // getPosition = (options) => {\n  //     return new Promise(function (resolve, reject) {\n  //       navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  //     });\n  // }\n  render() {\n    // console.log(`${this.state.lat}`)\n    // console.log(`${this.state.long}`)\n    // console.log(`${this.state.temperature}`)\n    // console.log(`${this.state.location}`)\n    console.log(\"\".concat(latitude));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"row justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"weather-card\",\n      border: \"danger\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Weather\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Today's Forecast\")))), React.createElement(Col, {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"battery\",\n      border: \"danger\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Battery\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Battery Temperature\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Current Battery Temperature is 30 degrees Fareinheit\"))))), React.createElement(Row, {\n      className: \"row justify-content-between bottom-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"col-6 bottom-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"weather-card\",\n      border: \"danger\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Speed Statistics\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Top    : Average:\")))), React.createElement(Col, {\n      className: \"col-6 bottom-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"battery\",\n      border: \"danger\",\n      style: {\n        width: '15rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Header\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Danger Card Title\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))))));\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/timothylee/FormulaSAE/formulaUI_20/formulaui_20/src/components/Cards.js"],"names":["React","Component","ReactDOM","Card","CardDeck","CardGroup","CardColumns","Container","Row","Col","axios","moment","io","usePosition","key","Cards","constructor","props","state","data","undefined","city","lat","long","temperature","location","componentDidMount","render","console","log","latitude","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Card, CardDeck, CardGroup, CardColumns, Container, Row, Col } from 'react-bootstrap';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport io from 'socket.io-client';\nimport { usePosition } from 'use-position';\n\nimport './Cards.css';\n\n\nconst key = \"9b6e02c485d9161a33a3956639611759\";\n\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: undefined,\n            city: \"Burbank\",\n            lat: undefined,\n            long: undefined,\n            temperature: undefined,\n            location: null\n        }\n    }\n\n    componentDidMount() { \n        // if (navigator.geolocation) {\n        //     this.getPosition()\n        //     .then((position) => {      \n        //       this.getWeather(position.coords.latitude, position.coords.longitude)\n        //     })\n        //     .catch((err) => {\n        //       this.setState({ errorMessage: err.message });\n        //     });\n        //   }\n        //   else {\n        //     alert(\"Geolocation not available\")\n        // }\n        // axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&APPID=${key}`)\n        //     .then (res => {\n        //         console.log(res);\n        //         const data = res.data;\n        //         this.setState({\n        //             lat: data.lat,\n        //             long: data.long,\n        //             city: data.city,\n        //             temperature: data.main[3]\n        //         });\n        //     })\n        \n    };\n    // getPosition = (options) => {\n    //     return new Promise(function (resolve, reject) {\n    //       navigator.geolocation.getCurrentPosition(resolve, reject, options);\n    //     });\n    // }\n    render() { \n        // console.log(`${this.state.lat}`)\n        // console.log(`${this.state.long}`)\n        // console.log(`${this.state.temperature}`)\n        // console.log(`${this.state.location}`)\n        console.log(`${latitude}`)\n        return (\n            <React.Fragment>\n            {/* // <div className=\"card-container\">  */}\n                <Container>\n                <Row className=\"row justify-content-between\">\n                    <Col className=\"col-6\">\n                        <Card className=\"weather-card\" border=\"danger\" style={{ width: '15rem' }}>\n                            <Card.Header>Weather</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Today's Forecast</Card.Title>\n                                    {/* <p>{this.state.data} </p> */}\n                            </Card.Body>\n                        </Card>  \n                    </Col>\n                    <Col className=\"col-6\">\n                        <Card className=\"battery\" border=\"danger\" style={{ width: '15rem' }}>\n                            <Card.Header>Battery</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Battery Temperature</Card.Title>\n                                <Card.Text>\n                                    Current Battery Temperature is 30 degrees Fareinheit\n                                </Card.Text>\n                            </Card.Body>\n                        </Card> \n                    </Col> \n                </Row> \n                <Row className=\"row justify-content-between bottom-row\">\n                    <Col className=\"col-6 bottom-col\">\n                        <Card className=\"weather-card\" border=\"danger\" style={{ width: '15rem' }}>\n                            <Card.Header>Speed Statistics</Card.Header>\n                            <Card.Body>\n                                <Card.Title> </Card.Title>\n                                <Card.Text>\n                                    Top    :\n                                    Average:       \n                                </Card.Text>\n                            </Card.Body>\n                        </Card>  \n                    </Col>\n                    <Col className=\"col-6 bottom-col\">\n                        <Card className=\"battery\" border=\"danger\" style={{ width: '15rem' }}>\n                            <Card.Header>Header</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Danger Card Title</Card.Title>\n                                <Card.Text>\n                                    Some quick example text to build on the card title and make up the bulk\n                                    of the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card> \n                    </Col> \n                </Row>       \n                </Container>    \n            {/* </div> */}\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default Cards; \n\n\n"]},"metadata":{},"sourceType":"module"}